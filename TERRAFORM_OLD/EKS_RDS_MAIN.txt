module "aws_vpc" {
  source = "./modules/vpc"

  env                  = "dev"
  vpc_cidr             = "10.0.0.0/16"
  public_subnet_cidrs  = ["10.0.1.0/24", "10.0.2.0/24"]
  private_subnet_cidrs = ["10.0.3.0/24", "10.0.4.0/24"]
  azs                  = ["eu-north-1a", "eu-north-1b"]
}

resource "aws_security_group" "rds_sg" {
  name        = "rds-access"
  description = "Allow access to RDS from EKS nodes or bastion host"
  vpc_id      = module.aws_vpc.vpc_id

  ingress {
    description = "PostgreSQL"
    from_port   = 5432
    to_port     = 5432
    protocol    = "tcp"
    cidr_blocks = ["10.0.0.0/16"]  # or specify only your app subnet range
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "rds-sg"
  }
}

module "aws_rds" {
  source = "./modules/rds"

  env                 = "dev"
  db_name             = "myappdb"
  db_username         = "adminuser"
  db_password         = "SuperSecret123!"  
  private_subnet_ids  = module.aws_vpc.private_subnet_ids
  db_sg_id            = aws_security_group.rds_sg.id
  instance_type       = "db.t3.micro"
  allocated_storage   = 20
}

resource "aws_iam_role" "eks_cluster_role" {
  name = "dev-eks-cluster-role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [{
      Effect = "Allow",
      Principal = {
        Service = "eks.amazonaws.com"
      },
      Action = "sts:AssumeRole"
    }]
  })
}

resource "aws_iam_role_policy_attachment" "eks_cluster_policy" {
  role       = aws_iam_role.eks_cluster_role.name
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
}

module "aws_eks" {
  source              = "./modules/eks"

  env                 = "dev"
  subnet_ids          = module.aws_vpc.private_subnet_ids
  cluster_role_arn    = aws_iam_role.eks_cluster_role.arn
  vpc_id              = module.aws_vpc.vpc_id
  control_plane_sg_id = var.control_plane_sg_id
  ssh_key_name        = var.ssh_key_name
}

